if (!isEmpty(list)) {
  // код, если список не пуст
}

// Что было плохо и почему?
// Без определения функции isEmpty или её аналогичного функционала неясно, как проверить пустоту списка
// Нет типизации

// function isEmpty<T>(list: T[]): boolean {
//   return list.length === 0;
// }

// if (!isEmpty(list)) {
//   код, если список не пуст
// }
// Или
// if (list.length > 0) {
//   // Код, если список не пуст
// }

// Что стало лучше и почему?
// Предоставление определения функции isEmpty делает код более понятным и самодокументируемым.
// Проверка пустоты списка непосредственно в условии делает код более очевидным и устраняет необходимость в дополнительной функции, если она не требуется